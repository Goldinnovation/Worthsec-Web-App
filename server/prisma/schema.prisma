generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model eventPrompt {
  id                      String           @id @default(uuid())
  eventHost               String
  eventTitle              String
  eventType               Int              @db.Integer
  eventDate               DateTime         @db.Date
  eventDescriptionContent String
  eventTime               String
  ImageCoverUpload        String
  createdAt               DateTime         @default(now())
  eventInviteType         Int?
  userJoinEvent           userJoinEvent[]
  userFavorEvent          userFavorEvent[]
}

model account {
  userId         String           @id @default(uuid())
  userName       String           @unique
  userEmail      String
  userPassword1  String
  createdAt      DateTime         @default(now())
  picture        picture?
  userTouser     userTouser[]
  userJoinEvent  userJoinEvent[]
  userFavorEvent userFavorEvent[]
}

model picture {
  id               String   @id @default(uuid())
  pictureUrl       String
  picture_owner    account  @relation(fields: [picture_owner_id], references: [userId])
  picture_owner_id String   @unique
  createdAt        DateTime @default(now())
}

model userJoinEvent {
  Joinid       String      @id @default(uuid())
  joined_user  account     @relation(fields: [user_id], references: [userId])
  user_id      String
  joined_event eventPrompt @relation(fields: [event_id], references: [id])
  event_id     String
  createdAt    DateTime    @default(now())
}

model userFavorEvent {
  favorid       String      @id @default(uuid())
  user_favored  account     @relation(fields: [user_id], references: [userId])
  user_id       String
  favored_event eventPrompt @relation(fields: [event_id], references: [id])
  event_id      String
  createdAt     DateTime    @default(now())
}

model userTouser {
  userTouserId     String   @id @default(uuid())
  userRequested    account  @relation(fields: [userRequested_id], references: [userId])
  userRequested_id String
  userFollowed     String
  userStatus       Int
  createdAt        DateTime @default(now())
}

model session {
  id     Int      @id @default(autoincrement())
  sid    String   @unique
  sess   String
  expire DateTime
}
